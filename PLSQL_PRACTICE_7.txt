---1
--A

CREATE TABLE TOP_SALARY(TOP_SAL NUMBER);

--B&C

DECLARE
V_NUM NUMBER:=&NUM;
SAL EMPLOYEES.SALARY%TYPE;
CURSOR C_EMP_CURSOR IS SELECT DISTINCT SALARY FROM EMPLOYEES ORDER BY SALARY DESC;
BEGIN
OPEN C_EMP_CURSOR;
FOR I IN 1..V_NUM LOOP
 FETCH C_EMP_CURSOR INTO SAL;
 INSERT INTO TOP_SALARY VALUES(SAL);
END LOOP;
END;
 
SELECT*FROM TOP_SALARY

DECLARE
V_NUM NUMBER:=&NUM;
SAL EMPLOYEES.SALARY%TYPE;
CURSOR C_EMP_CURSOR IS SELECT DISTINCT SALARY FROM EMPLOYEES ORDER BY SALARY DESC;
BEGIN
OPEN C_EMP_CURSOR;
FOR I IN 1..V_NUM LOOP
 FETCH C_EMP_CURSOR INTO SAL;
 INSERT INTO TOP_SALARY VALUES(SAL);
 EXIT WHEN C_EMP_CURSOR%ROWCOUNT>=V_NUM AND C_EMP_CURSOR%NOTFOUND;
CLOSE C_EMP_CURSOR; 
END LOOP;
END;

--D

SELECT*FROM TOP_SALARY

--E
DELETE FROM TOP_SALARY

---2

--A
SET SERVEROUTPUT ON;
DECLARE
 V_DEPTNO NUMBER:=&DEPTNO;
 CURSOR C_EMPS_CURSOR IS SELECT LAST_NAME,SALARY,MANAGER_ID FROM EMPLOYEES WHERE DEPARTMENT_ID=V_DEPTNO; 
BEGIN
 OPEN C_EMPS_CURSOR;
 FOR EMP_RECORD IN C_EMPS_CURSOR LOOP
 IF EMP_RECORD.SALARY<5000 AND EMP_RECORD.MANAGER_ID IN(101,124) THEN
  DBMS_OUTPUT.PUT_LINE(EMP_RECORD.LAST_NAME||'DUE FOR RAISE');
 ELSE
  DBMS_OUTPUT.PUT_LINE(EMP_RECORD.LAST_NAME||' NOT DUE FOR RAISE');
 END IF;
 END LOOP;
CLOSE C_EMPS_CURSOR;
 END;
 